<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bread.app.AdminProductMapper">



    <!-- 상품 목록 조회 -->
    <select id="getBoards" parameterType="searchVO"  resultType="adminProductVO">
        <choose>
			<when test="searchWord != null"><!-- 검색어가 있는 경우 -->
		        SELECT /*+ INDEX(bc_bakery bc_bakery_pk) */ b.*, ba.bakery_name
		        FROM bc_bread b
		                 LEFT JOIN bc_bakery ba ON b.bakery_idx = ba.bakery_idx
		        WHERE bakery_name like CONCAT('%',#{searchWord},'%') and b.bread_del = 0
		        ORDER BY b.bread_idx DESC
		            LIMIT #{startIdx}, 10

		     </when>
			<otherwise>
				SELECT /*+ INDEX(bc_bakery bc_bakery_pk) */ b.*, ba.bakery_name
				FROM bc_bread b
				LEFT JOIN bc_bakery ba ON b.bakery_idx = ba.bakery_idx
				WHERE b.bread_del = 0
				ORDER BY b.bread_idx DESC
				LIMIT #{startIdx}, 10
			</otherwise>
			</choose>
    </select>
 	
 	<select id="getTotalCount" parameterType="pageVO" resultType="_int">
 		select count(*) from bc_bread
 	</select>
 	
 	<!-- 개별 상품 조회 -->
    <select id="getBoard" parameterType="_int" resultType="adminProductVO">
        SELECT b.*, bk.bakery_name
        FROM bc_bread b
        INNER JOIN bc_bakery bk ON b.bakery_idx = bk.bakery_idx
        WHERE b.bread_idx = #{bread_idx} AND b.bread_del = 0
    </select>

    <!-- 상품 정보 수정 -->
	<update id="update" parameterType="adminProductVO">
	    update bc_bread
	    set
	    bread_name = #{bread_name},
	    bread_price = #{bread_price},
	    bread_content = #{bread_content},
	    bread_time1 = #{bread_time1},
	    bread_time2 = #{bread_time2},
	    bread_time3 = #{bread_time3},
	    bread_status = #{bread_status}
	    where bread_idx = #{bread_idx}
	</update>
 	

</mapper>