<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bread.app.OrderMapper">
	<!-- Create -->
		
	<!-- Read -->
	<!-- 오더 내용 -->
	<select id="order" parameterType="pageVO" resultType="orderVO">
		select o.payment_status, o.order_idx, o.payment_date, o.member_idx, o.amount, m.member_name
			from bc_order o
            inner join bc_member m on o.member_idx = m.member_idx
			where o.member_idx = #{member_idx}
			order by payment_date desc
			limit #{startIdx}, 5
	</select>	
	<!-- 아이템 내용 -->
	<select id="item" parameterType="pageVO" resultType="itemVO">
		select o.order_idx, o.member_idx, b.bread_idx,
				b.bread_img_save, b.bread_name, b.bread_price, i.bread_count,
				bk.bakery_name, i.review_status, bk.bakery_idx
			from bc_order o 
				 left outer join bc_item i on o.order_idx = i.order_idx 
				 left outer join bc_bread b on i.bread_idx = b.bread_idx
				 left outer join bc_bakery bk on i.bakery_idx = bk.bakery_idx
			where o.member_idx = #{member_idx}
			and o.order_idx = #{order_idx}
			order by payment_date desc
	</select>
	<!-- 오더 내용 -->
	<select id="order2" parameterType="pageVO" resultType="orderVO">
		select o.payment_status, o.order_idx, o.payment_date, o.member_idx, o.amount, m.member_name
			from bc_order o
			left outer join bc_member m on o.member_idx = m.member_idx
			left outer join bc_item i on o.order_idx = i.order_idx 
			left outer join bc_bread b on i.bread_idx = b.bread_idx
			left outer join bc_bakery bk on i.bakery_idx = bk.bakery_idx
			where i.bakery_idx = #{bakery_idx}
			order by payment_date desc
			limit #{startIdx}, 5
	</select>	
	<!-- 아이템 내용 -->
	<select id="item2" parameterType="pageVO" resultType="itemVO">
		select o.order_idx, o.member_idx, b.bread_idx,
				b.bread_img_save, b.bread_name, b.bread_price, i.bread_count,
				bk.bakery_name, i.review_status, bk.bakery_idx
			from bc_order o 
				 left outer join bc_item i on o.order_idx = i.order_idx 
				 left outer join bc_bread b on i.bread_idx = b.bread_idx
				 left outer join bc_bakery bk on i.bakery_idx = bk.bakery_idx
			where i.bakery_idx = #{bakery_idx}
			and o.order_idx = #{order_idx}
			order by payment_date desc
	</select>
	
	<!-- Bakery_idx 찾기 -->
	<select id="getBakeryIdx" parameterType="_int" resultType="_int">
		select bakery_idx
			from bc_bakery
			where member_idx = #{member_idx}
	</select>
	
	<!-- 개인 주문 내역의 총 갯수 조회 -->
	<select id="getTotalCount" parameterType="pageVO" resultType="_int">
		select count(*)
			from bc_order
			where member_idx = #{member_idx}
			order by payment_date desc
	</select>
	<select id="getTotalCount2" parameterType="pageVO" resultType="_int">
		select count(*)
			from bc_order o 
				 left outer join bc_item i on o.order_idx = i.order_idx 
				 left outer join bc_bread b on i.bread_idx = b.bread_idx
				 left outer join bc_bakery bk on i.bakery_idx = bk.bakery_idx
			where i.bakery_idx=#{bakery_idx}
			order by payment_date desc
	</select>

	<!-- Update -->	
	<!-- Delete -->
	<update id="orderCancel" parameterType="string">

	    	update bc_order 
			set payment_status = 1
			where order_idx = #{order_idx}
				
	    
	</update>
</mapper>