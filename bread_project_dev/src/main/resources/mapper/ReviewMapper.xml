<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bread.app.ReviewMapper">

    <!-- Create -->

    <!-- 리뷰 등록 -->
    <insert id="insert" parameterType="reviewVO">
        insert into bc_review (order_idx, member_idx, bread_idx, review_content, originfile_name, savefile_name)
        values (#{order_idx}, #{member_idx}, #{bread_idx}, #{review_content}, #{originfile_name}, #{savefile_name});
    </insert>

    <!-- Read -->
	<!-- 전체 게시물 수 조회 -->
 	<select id="getTotalCount" parameterType="pageVO" resultType="_int">
 		select count(*) from bc_review
 	</select>
 
    <!-- 모든 리뷰 조회: select -->
    <select id="getBoards" parameterType="pageVO" resultType="reviewVO">
		select
	        r.review_idx,
	        b.bread_name,
	        b.bread_img_save,
	        bk.bakery_idx,
	        bk.bakery_name,
	        m.member_nickname,
	        r.review_content,
	        r.review_post_date
    	from
        	bc_review r
    		inner join bc_order o on r.order_idx = o.order_idx
            inner join bc_bread b on r.bread_idx = b.bread_idx
            inner join bc_bakery bk on b.bakery_idx = bk.bakery_idx
            inner join bc_member m on m.member_idx = r.member_idx
    	where
        	o.payment_status = 0
        	and m.member_del = 0
        	and bk.bakery_del = 0
        	and r.review_del_or_not = 1
    	order by
        	r.review_idx desc
    		limit #{startIdx}, 8
    </select>

	<!-- 하나의 리뷰 조회: select -->
	<select id="getBoard" parameterType="_int" resultType="reviewVO">
	    select
	    	r.review_idx, b.bread_name, b.bread_img_save,
		    bk.bakery_idx, bk.bakery_name,
		    m.member_nickname,m.member_idx,
		    r.review_content, r.view_count,
		    r.review_post_date, r.savefile_name, b.bread_idx
	    from
		    bc_review r
    		inner join bc_order o on r.order_idx = o.order_idx
            inner join bc_bread b on r.bread_idx = b.bread_idx
            inner join bc_bakery bk on b.bakery_idx = bk.bakery_idx
            inner join bc_member m on m.member_idx = r.member_idx
	    where
		    r.review_idx = #{review_idx} and
		    m.member_del = 0 and
		    bk.bakery_del = 0 and
		    r.review_del_or_not=1;
	</select>

    <!-- Update -->
    <!-- 조회수 증가 -->
    <update id="increaseViewCount" parameterType="int">
        update bc_review set view_count = view_count + 1 where review_idx = #{review_idx}
    </update>
    <!-- 리뷰 상태 변경 -0 : 등록전, 1 : 등록완료 -->
    <update id="updateReviewStatus" parameterType="int">
        update bc_review set review_status = 1 where review_idx = #{review_idx}
    </update>
    
    <!-- Delete -->
    <!-- 리뷰 삭제 -->
    <update id="reviewDelete" parameterType="_int">
        update bc_review set review_del_or_not=0, review_update_date=now()
        where review_idx=#{review_idx}
    </update>
</mapper>