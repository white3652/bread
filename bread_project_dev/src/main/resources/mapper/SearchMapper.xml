<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bread.app.SearchMapper">
	<!-- Create -->
	<!-- Read -->
	<!-- 전체 빵집 수 조회 -->
	<select id="getTotalCount" parameterType="searchVO"	resultType="_int">
		<!-- 검색어가 있는 경우와 없는 경우 -->
		<choose>
			<when test="searchWord != null">
				select count(*) from bc_bakery
					where bakery_name like CONCAT('%',#{searchWord},'%')
			</when>
			<otherwise>
				select count(*) from bc_bakery
			</otherwise>
		</choose>
	</select>
	
	<!-- 빵집 전체 조회 -->
	<select id="getBakerys" parameterType="searchVO" resultType="bakeryVO">
		<!-- if~else구문, switch구문은 JSTL과 같이 choose-when-otherwise구문을 사용함 -->
		<choose>
			<when test="searchWord != null"><!-- 검색어가 있는 경우 -->
				select /*+ INDEX(bc_bakery bc_bakery_pk) */
				*
				from bc_bakery
				where bakery_name like CONCAT('%',#{searchWord},'%')
				order by bakery_idx
				limit #{startIdx}, 5
				<!-- limit (#{pageNum}-1)*10, 10 ~ MySQL 구문오류 발생 (#{pageNum}-1)*10 => 
					searchVO 입력값에서 #{startIdx}으로 추출해서 사용할 수 있도록 소스를 변경함 -->

			</when>
			<otherwise><!-- 검색어가 없는 경우 -->
				select /*+ INDEX(bc_bakery bc_bakery_pk) */
				*
				from bc_bakery
				order by bakery_idx
				limit #{startIdx}, 5
				<!-- limit (#{pageNum}-1)*10, 10 ~ MySQL 구문오류 발생 (#{pageNum}-1)*10 => 
					searchVO 입력값에서 #{startIdx}으로 추출해서 사용할 수 있도록 소스를 변경함 -->
			</otherwise>
		</choose>
	</select>
	
	<!-- 빵집 한개 조회 -->
	<select id="getBakery" parameterType="_int" resultType="bakeryVO">
		select * from bc_bakery where bakery_idx = #{bakery_idx}
	</select>
	
	<!-- 빵 정보 조회 -->
	<select id="getBreads" parameterType="_int" resultType="breadVO">
		 select bread_idx, bread_name, bread_price, bread_content, bread_time1, bread_time2, bread_time3, bread_img_save, bread_stock, bread_status
		 from bc_bakery bc inner join bc_bread b
		 on bc.bakery_idx = b.bakery_idx
		 where bc.bakery_idx = #{bakery_idx} and bread_del=0 and bread_status=1
	</select>
	
	<!-- Ajax를 위한 조회 -->
	<select id="getBread" parameterType="_int" resultType="breadVO">
		select * from bc_bread where bread_idx = #{bread_idx} and bread_del=0
	</select>
	
	<!-- 장바구니 중복 검사를 위한 조회 -->
	<select id="checkCart" parameterType="map" resultType="_int">
		select count(*) from bc_cart where member_idx=#{member_idx} and bread_idx=#{bread_idx}
	</select>
	
	<!-- Update -->
	
	<!-- Delete -->
</mapper>